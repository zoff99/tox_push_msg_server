---
version: 2

workflows:
  version: 2
  build_linux:
    jobs:
      - build

jobs:
  build:
    working_directory: ~/work
    docker:
      - image: ubuntu:20.04

    steps:
      - run: &apt_install
          apt update &&
          export DEBIAN_FRONTEND=noninteractive ; apt install -y --no-install-recommends
            gcc
            pkg-config
            zip grep file ca-certificates autotools-dev autoconf automake
            git bc wget rsync make pkg-config libtool
            ssh gzip tar unzip
            libcurl4-gnutls-dev

      - checkout

      - run: &apt_install
          export DEBIAN_FRONTEND=noninteractive ; apt install -y --no-install-recommends clang-10
      - run: dpkg -l | grep clang
      - run: type -a clang-10
      - run: clang-11 --version


      - run: ls -al
      - run: cp -av fcm_config.h_example fcm_config.h
      - run: clang-11 -O3 -g -fPIC -Wall -Wextra
             -fno-omit-frame-pointer
             -fsanitize=address
             -fstack-protector-all
             --param=ssp-buffer-size=1
             -Wlarger-than=5000
             -Wframe-larger-than=5000
             -Wvla
             -Werror=div-by-zero
             tox_push_msg_server.c
             -lcurl
             -o tox_push_msg_server


      - store_artifacts:
          path: ~/work/artefacts
          destination: artefacts
